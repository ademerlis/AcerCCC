facet_wrap(~month, scales = "free_x") +
scale_x_time(labels = scales::time_format("%H:%M")) +
theme_bw() +
theme(legend.position = "none")
tidy_KB_CCC_data
tidy_KB_CCC_data
cures_frame_tilt_temp
cures_frame_tilt_temp <- read_excel("raw_data/Oct2020_Jan2022_1901102_urban-2020-10_(0)_Temperature.xlsx", sheet = "1901102_urban-2020-10_(0)_Tempe")
#logged every 15 min
#edit cures frame time
cures_frame_tilt_temp$Datetime <- as.POSIXct(cures_frame_tilt_temp$Datetime, tz="UTC")
cures_frame_tilt_temp$Datetime_EST <- with_tz(cures_frame_tilt_temp$Datetime, "America/New_York")
# Filter the data to select time points at 2-hour intervals
cures_frame_tilt_temp <- cures_frame_tilt_temp %>%
filter(minute(Datetime_EST) == 0 & (hour(Datetime_EST) %% 2 == 0))
cures_frame_tilt_temp %>%
mutate(site = "CCC") %>%
dplyr::select(!Date:Datetime) %>%
dplyr::rename(Temperature = `Temperature (C)`) -> cures_frame_tilt_temp
cures_frame_tilt_temp
cures_frame_tilt_temp %>%
tidyr::separate(Datetime_EST, c("Date", "Time"), sep = "\\ ", remove = FALSE)
# split date and time into two columns
cures_frame_tilt_temp %>%
tidyr::separate(Datetime_EST, c("Date", "Time"), sep = "\\ ", remove = FALSE) %>%
mutate(Date = as.Date(Date), Time = format(Time, format = "%H:%M:%S")) -> cures_frame_tilt_temp
cures_frame_tilt_temp
cures_frame_tilt_temp <- read_excel("raw_data/Oct2020_Jan2022_1901102_urban-2020-10_(0)_Temperature.xlsx", sheet = "1901102_urban-2020-10_(0)_Tempe")
#logged every 15 min
#edit cures frame time
cures_frame_tilt_temp$Datetime <- as.POSIXct(cures_frame_tilt_temp$Datetime, tz="UTC")
cures_frame_tilt_temp$Datetime_EST <- with_tz(cures_frame_tilt_temp$Datetime, "America/New_York")
# Filter the data to select time points at 2-hour intervals
cures_frame_tilt_temp <- cures_frame_tilt_temp %>%
filter(minute(Datetime_EST) == 0 & (hour(Datetime_EST) %% 2 == 0))
cures_frame_tilt_temp %>%
mutate(site = "CCC") %>%
dplyr::select(!Date:Datetime) %>%
dplyr::rename(Temperature = `Temperature (C)`) -> cures_frame_tilt_temp
# split date and time into two columns
cures_frame_tilt_temp %>%
tidyr::separate(Datetime_EST, c("Date", "Time"), sep = "\\ ", remove = FALSE) %>%
mutate(Date = as.Date(Date), Time = format(Time, format = "%H:%M:%S")) -> cures_frame_tilt_temp
cures_frame_tilt_temp <- read_excel("raw_data/Oct2020_Jan2022_1901102_urban-2020-10_(0)_Temperature.xlsx", sheet = "1901102_urban-2020-10_(0)_Tempe")
#logged every 15 min
#edit cures frame time
cures_frame_tilt_temp$Datetime <- as.POSIXct(cures_frame_tilt_temp$Datetime, tz="UTC")
cures_frame_tilt_temp$Datetime_EST <- with_tz(cures_frame_tilt_temp$Datetime, "America/New_York")
# Filter the data to select time points at 2-hour intervals
cures_frame_tilt_temp <- cures_frame_tilt_temp %>%
filter(minute(Datetime_EST) == 0 & (hour(Datetime_EST) %% 2 == 0))
cures_frame_tilt_temp %>%
mutate(site = "CCC") %>%
dplyr::select(!Date:Datetime) %>%
dplyr::rename(Temperature = `Temperature (C)`) -> cures_frame_tilt_temp
# split date and time into two columns
cures_frame_tilt_temp %>%
tidyr::separate(Datetime_EST, c("Date", "Time"), sep = "\\ ", remove = FALSE) %>%
mutate(Date = as.Date(Date), Time = format(Datetime_EST, format = "%H:%M:%S")) -> cures_frame_tilt_temp
cures_frame_tilt_temp
cures_frame_tilt_temp %>%
mutate(Time_period = hms(Time))
cures_frame_tilt_temp %>%
mutate(Time_period = hms(Time)) -> cures_frame_tilt_temp
all_KB_data
all_KB_data %>%
tidyr::separate(Datetime_EST, c("Date", "Time"), sep = "\\ ", remove = FALSE) %>%
mutate(Date = as.Date(Date), Time = format(Datetime_EST, format = "%H:%M:%S")) -> all_KB_data
all_KB_data
all_KB_data %>%
mutate(Time_period = hms(Time)) -> all_KB_data
all_KB_data
ggplot(all_KB_data, aes(x=Datetime_EST, y=Temperature, color = site)) +
geom_point() +
theme_bw() +
scale_x_datetime(date_labels = "%b %Y",  # Customize the date format
date_breaks = "1 month") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
all_KB_data %>%
group_by(Date) %>%
summarise(mean_daily_temp = mean(Temperature), sd_daily_temp = sd(Temperature), daily_range = (max(Temperature)-min(Temperature))) %>%
ggplot(., aes(x=Date, y=mean_daily_temp)) +
geom_ribbon(aes(ymin = mean_daily_temp - sd_daily_temp, ymax = mean_daily_temp + sd_daily_temp), fill = "grey70") +
geom_line() +
theme_bw()
all_KB_data %>%
mutate(year = year(Date), month = month(Date), day = day(Date)) %>%
filter(Date > "2021-06-01") %>%
mutate(Date = as.factor(Date)) %>%
ggplot(., aes(x=Time, y=Temperature, color = Date)) +
geom_point() +
geom_smooth(se=F) +
facet_wrap(~month) +
scale_x_time(labels = scales::time_format("%H:%M")) +
theme_bw() +
theme(legend.position = "none")
tidy_KB_data
tidy_KB_data
all_KB_data %>%
mutate(year = year(Date), month = month(Date), day = day(Date)) %>%
filter(Date > "2021-06-01") %>%
mutate(Date = as.factor(Date)) %>%
ggplot(., aes(x=Time_period, y=Temperature, color = Date)) +
geom_point() +
geom_smooth(se=F) +
facet_wrap(~month) +
scale_x_time(labels = scales::time_format("%H:%M")) +
theme_bw() +
theme(legend.position = "none")
all_KB_data %>%
full_join(., CCC_temp_2021_06_01) %>%
filter(Date < "2021-12-01" & Date > "2021-06-01") %>%
ggplot(., aes(x=Date, y=Temperature, color = site)) +
geom_line() +
theme_bw() +
labs(x="Date", y = "Temp (ºC)") +
scale_color_manual(values = c("CCC" = "orange", "Nursery" = "darkblue")) +
scale_x_date(date_labels = "%b %Y",  # Customize the date format
date_breaks = "1 month") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_vline(xintercept=as.POSIXct(as.Date("2021-06-23")))
all_KB_data
CCC_temp_2021_06_01
# trim off the first and last day because those include time points before the instrument was in the water
cures_frame_tilt_temp %>%
filter(Date > "2021-06-01" & Date < "2021-12-01") -> CCC_temp_2021_06_01
all_KB_data %>%
full_join(., CCC_temp_2021_06_01) %>%
filter(Date < "2021-12-01" & Date > "2021-06-01") %>%
ggplot(., aes(x=Date, y=Temperature, color = site)) +
geom_line() +
theme_bw() +
labs(x="Date", y = "Temp (ºC)") +
scale_color_manual(values = c("CCC" = "orange", "Nursery" = "darkblue")) +
scale_x_date(date_labels = "%b %Y",  # Customize the date format
date_breaks = "1 month") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_vline(xintercept=as.POSIXct(as.Date("2021-06-23")))
tidy_KB_data %>%
full_join(., CCC_temp_2021_06_01) %>%
filter(Date < "2021-12-01" & Date > "2021-06-01") %>%
mutate(year = year(Date), month = month(Date), day = day(Date)) %>%
as.data.frame() %>%
write_csv(., "tidy_KB_CCC_data.csv")
all_KB_data %>%
full_join(., CCC_temp_2021_06_01) %>%
filter(Date < "2021-12-01" & Date > "2021-06-01") %>%
mutate(year = year(Date), month = month(Date), day = day(Date)) %>%
as.data.frame() %>%
write_csv(., "tidy_KB_CCC_data.csv")
tidy_KB_CCC_data <- read_csv("results_csv/tidy_KB_CCC_data.csv")
tidy_KB_CCC_data %>%
filter(Date < "2021-11-01" & Date > "2021-06-23") %>%
ggplot(., aes(x=Date, y=Temperature, color = site)) +
geom_line() +
theme_bw() +
scale_color_manual(values = c("CCC" = "orange", "Nursery" = "darkblue")) +
scale_x_date(date_labels = "%b %Y",  # Customize the date format
date_breaks = "1 month") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x="Month Year", y = "Temperature")
ggsave("temps_experimentalperiod.pdf")
tidy_KB_CCC_data %>%
filter(Date <= "2021-10-30" & Date >= "2021-10-28") %>%
ggplot(., aes(x=Datetime_EST, y=Temperature, color = site)) +
geom_point() +
geom_line() +
theme_bw() +
scale_color_manual(values = c("CCC" = "orange", "Nursery" = "darkblue")) +
labs(x="Date", y = "Temperature")  +
scale_x_datetime(date_breaks = "3 hours", date_labels = "%H:%M") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
tidy_KB_CCC_data %>%
group_by(Date,site) %>%
summarise(mean_daily_temp = mean(Temperature), sd_daily_temp = sd(Temperature), daily_range = (max(Temperature)-min(Temperature))) %>%
ggplot(., aes(x=Date, y=daily_range, color = site)) +
geom_line() +
theme_bw()
tidy_KB_CCC_data %>%
filter(site == "CCC") %>%
mutate(year = year(Date), month = month(Date), day = day(Date)) %>%
filter(Date < "2021-12-01") %>%
mutate(Date = as.factor(Date)) %>%
ggplot(., aes(x=hms(Datetime_EST), y=Temperature, color = Date)) +
geom_point() +
geom_smooth(se=F) +
facet_wrap(~month, scales = "free_x") +
scale_x_time(labels = scales::time_format("%H:%M")) +
theme_bw() +
theme(legend.position = "none")
tidy_KB_CCC_data %>%
filter(site == "CCC") %>%
mutate(year = year(Date), month = month(Date), day = day(Date)) %>%
filter(Date < "2021-12-01") %>%
mutate(Date = as.factor(Date)) %>%
ggplot(., aes(x=Time, y=Temperature, color = Date)) +
geom_point() +
geom_smooth(se=F) +
facet_wrap(~month, scales = "free_x") +
scale_x_time(labels = scales::time_format("%H:%M")) +
theme_bw() +
theme(legend.position = "none")
tidy_KB_CCC_data %>%
filter(site == "CCC") %>%
mutate(year = year(Date), month = month(Date), day = day(Date)) %>%
filter(Date < "2021-12-01") %>%
mutate(Date = as.factor(Date)) %>%
ggplot(., aes(x=Time_period, y=Temperature, color = Date)) +
geom_point() +
geom_smooth(se=F) +
facet_wrap(~month, scales = "free_x") +
scale_x_time(labels = scales::time_format("%H:%M")) +
theme_bw() +
theme(legend.position = "none")
tidy_KB_CCC_data
tidy_KB_CCC_data
tidy_KB_CCC_data <- read_csv("results_csv/tidy_KB_CCC_data.csv")
tidy_KB_CCC_data %>%
filter(Date < "2021-11-01" & Date > "2021-06-23") %>%
ggplot(., aes(x=Date, y=Temperature, color = site)) +
geom_line() +
theme_bw() +
scale_color_manual(values = c("CCC" = "orange", "Nursery" = "darkblue")) +
scale_x_date(date_labels = "%b %Y",  # Customize the date format
date_breaks = "1 month") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x="Month Year", y = "Temperature")
tidy_KB_CCC_data %>%
filter(Date <= "2021-10-30" & Date >= "2021-10-28") %>%
ggplot(., aes(x=Datetime_EST, y=Temperature, color = site)) +
geom_point() +
geom_line() +
theme_bw() +
scale_color_manual(values = c("CCC" = "orange", "Nursery" = "darkblue")) +
labs(x="Date", y = "Temperature")  +
scale_x_datetime(date_breaks = "3 hours", date_labels = "%H:%M") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
tidy_KB_CCC_data %>%
group_by(Date,site) %>%
summarise(mean_daily_temp = mean(Temperature), sd_daily_temp = sd(Temperature), daily_range = (max(Temperature)-min(Temperature))) %>%
ggplot(., aes(x=Date, y=daily_range, color = site)) +
geom_line() +
theme_bw()
tidy_KB_CCC_data %>%
filter(site == "CCC") %>%
mutate(year = year(Date), month = month(Date), day = day(Date)) %>%
filter(Date < "2021-12-01") %>%
mutate(Date = as.factor(Date)) %>%
ggplot(., aes(x=Time_period, y=Temperature, color = Date)) +
geom_point() +
geom_smooth(se=F) +
facet_wrap(~month, scales = "free_x") +
scale_x_time(labels = scales::time_format("%H:%M")) +
theme_bw() +
theme(legend.position = "none")
tidy_KB_CCC_data
tidy_KB_CCC_data %>%
filter(site == "CCC") %>%
mutate(year = year(Date), month = month(Date), day = day(Date)) %>%
filter(Date < "2021-12-01") %>%
mutate(Date = as.factor(Date)) %>%
ggplot(., aes(x=Time, y=Temperature, color = Date)) +
geom_point() +
geom_smooth(se=F) +
facet_wrap(~month, scales = "free_x") +
scale_x_time(labels = scales::time_format("%H:%M")) +
theme_bw() +
theme(legend.position = "none")
tidy_KB_CCC_data %>%
filter(site == "Nursery") %>%
mutate(year = year(Date), month = month(Date), day = day(Date)) %>%
filter(Date < "2021-12-01") %>%
mutate(Date = as.factor(Date)) %>%
ggplot(., aes(x=Time, y=Temperature, color = Date)) +
geom_point() +
geom_smooth(se=F) +
facet_wrap(~month) +
scale_x_time(labels = scales::time_format("%H:%M")) +
theme_bw() +
theme(legend.position = "none") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
tidy_KB_CCC_data %>%
filter(as.Date(Datetime_EST) < "2021-11-01" & as.Date(Datetime_EST) > "2021-06-23") %>%
ggplot(., aes(x=Time, y=Temperature, color = site)) +
geom_point() +
geom_smooth() +
facet_wrap(~month) +
scale_x_time(labels = scales::time_format("%H:%M"))+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
tidy_KB_CCC_data %>%
filter(as.Date(Datetime_EST) < "2021-12-01" & as.Date(Datetime_EST) > "2021-06-23") %>%
ggplot(., aes(x=Time, y=Temperature, color = site)) +
geom_point() +
geom_smooth() +
facet_wrap(~month) +
scale_x_time(labels = scales::time_format("%H:%M"))+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
tidy_KB_CCC_data %>%
filter(as.Date(Datetime_EST) < "2021-12-01" & as.Date(Datetime_EST) > "2021-06-23") %>%
ggplot(., aes(x=Time, y=Temperature, color = site)) +
geom_point() +
geom_line() +
facet_wrap(~month) +
scale_x_time(labels = scales::time_format("%H:%M"))+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
tidy_KB_CCC_data %>%
filter(as.Date(Datetime_EST) < "2021-12-01" & as.Date(Datetime_EST) > "2021-06-23") %>%
ggplot(., aes(x=Date, y=Temperature, color = site)) +
geom_point() +
geom_line() +
facet_wrap(~month) +
scale_x_time(labels = scales::time_format("%H:%M"))+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
tidy_KB_CCC_data
tidy_KB_CCC_data %>%
filter(as.Date(Datetime_EST) < "2021-12-01" & as.Date(Datetime_EST) > "2021-06-23") %>%
ggplot(., aes(x=Date, y=Temperature, color = site)) +
geom_point() +
geom_line() +
facet_wrap(~month) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
tidy_KB_CCC_data %>%
filter(as.Date(Datetime_EST) < "2021-12-01" & as.Date(Datetime_EST) > "2021-06-23") %>%
ggplot(., aes(x=Date, y=Temperature, color = site)) +
geom_point() +
geom_line() +
facet_wrap(~month, scales = "free_x") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
tidy_KB_CCC_data %>%
filter(as.Date(Datetime_EST) < "2021-12-01" & as.Date(Datetime_EST) > "2021-06-01") %>%
ggplot(., aes(x=Date, y=Temperature, color = site)) +
geom_point() +
geom_line() +
facet_wrap(~month, scales = "free_x") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
tidy_KB_CCC_data %>%
filter(as.Date(Datetime_EST) < "2021-12-01" & as.Date(Datetime_EST) > "2021-06-01") %>%
ggplot(., aes(x=Datetime_EST, y=Temperature, color = site)) +
geom_point() +
geom_line() +
facet_wrap(~month, scales = "free_x") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
tidy_KB_CCC_data %>%
filter(as.Date(Datetime_EST) < "2021-12-01" & as.Date(Datetime_EST) > "2021-06-01") %>%
ggplot(., aes(x=Datetime_EST, y=Temperature, color = site)) +
geom_point() +
geom_smooth() +
facet_wrap(~month, scales = "free_x") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
tidy_KB_CCC_data %>%
filter(as.Date(Datetime_EST) < "2021-12-01" & as.Date(Datetime_EST) > "2021-06-01") %>%
ggplot(., aes(x=Datetime_EST, y=Temperature, color = site)) +
geom_point() +
geom_smooth(lm = "loess") +
facet_wrap(~month, scales = "free_x") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
tidy_KB_CCC_data %>%
filter(as.Date(Datetime_EST) < "2021-12-01" & as.Date(Datetime_EST) > "2021-06-01") %>%
ggplot(., aes(x=Datetime_EST, y=Temperature, color = site)) +
geom_point() +
facet_wrap(~month, scales = "free_x") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
tidy_KB_CCC_data %>%
filter(as.Date(Datetime_EST) < "2021-12-01" & as.Date(Datetime_EST) > "2021-06-01") %>%
group_by(as.Date(Datetime_EST), site) %>%
mutate(season = case_when(`as.Date(Datetime_EST)` <= "2021-05-25" ~ "Dry",
`as.Date(Datetime_EST)` >= "2021-05-26" & `as.Date(Datetime_EST)` <= "2021-10-15" ~ "Wet",
`as.Date(Datetime_EST)` >= "2021-10-16" ~ "Dry")) %>%
group_by(site, season) %>%
summarise(sample_size = n(), mean_temp = mean(Temperature), sd_temp = sd(Temperature), max_temp = max(Temperature), min_temp =min(Temperature)) %>%
write_csv("summary_stats_temp_data.csv")
tidy_KB_CCC_data %>%
filter(as.Date(Datetime_EST) < "2021-12-01" & as.Date(Datetime_EST) > "2021-06-01") %>%
ggplot(., aes(x=Datetime_EST, y=Temperature, color = site)) +
geom_point(aes(alpha=0.1)) +
facet_wrap(~month, scales = "free_x") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
tidy_KB_CCC_data %>%
filter(as.Date(Datetime_EST) < "2021-12-01" & as.Date(Datetime_EST) > "2021-06-01") %>%
ggplot(., aes(x=Datetime_EST, y=Temperature, color = site)) +
geom_point(alpha=0.1) +
facet_wrap(~month, scales = "free_x") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
tidy_KB_CCC_data %>%
filter(as.Date(Datetime_EST) < "2021-12-01" & as.Date(Datetime_EST) > "2021-06-01") %>%
ggplot(., aes(x=Datetime_EST, y=Temperature, color = site)) +
geom_point(alpha=0.1) +
geom_line()
tidy_KB_CCC_data %>%
filter(as.Date(Datetime_EST) < "2021-12-01" & as.Date(Datetime_EST) > "2021-06-01") %>%
ggplot(., aes(x=Datetime_EST, y=Temperature, color = site)) +
geom_point(alpha=0.1) +
geom_line() +
facet_wrap(~month, scales = "free_x") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
tidy_KB_CCC_data %>%
filter(as.Date(Datetime_EST) < "2021-12-01" & as.Date(Datetime_EST) > "2021-06-01") %>%
ggplot(., aes(x=Datetime_EST, y=Temperature, color = site)) +
geom_point(alpha=0.2) +
geom_line() +
facet_wrap(~month, scales = "free_x") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
tidy_KB_CCC_data %>%
filter(as.Date(Datetime_EST) < "2021-12-01" & as.Date(Datetime_EST) > "2021-06-01") %>%
ggplot(., aes(x=Datetime_EST, y=Temperature, color = site)) +
geom_line() +
facet_wrap(~month, scales = "free_x") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
tidy_KB_CCC_data %>%
filter(as.Date(Datetime_EST) < "2021-12-01" & as.Date(Datetime_EST) > "2021-06-01") %>%
ggplot(., aes(x=Datetime_EST, y=Temperature, color = site)) +
geom_line() +
facet_wrap(~month, scales = "free_x") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_color_manual(values = c("CCC" = "orange", "Nursery" = "darkblue"))
tidy_KB_CCC_data %>%
filter(as.Date(Datetime_EST) < "2021-12-01" & as.Date(Datetime_EST) > "2021-06-01") %>%
ggplot(., aes(x=Datetime_EST, y=Temperature, color = site)) +
geom_line() +
facet_wrap(~month, scales = "free_x") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_color_manual(values = c("CCC" = "orange", "Nursery" = "darkblue")) +
theme_classic()
tidy_KB_CCC_data %>%
filter(as.Date(Datetime_EST) < "2021-12-01" & as.Date(Datetime_EST) > "2021-06-01") %>%
ggplot(., aes(x=Datetime_EST, y=Temperature, color = site)) +
geom_line() +
facet_wrap(~month, scales = "free_x") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_color_manual(values = c("CCC" = "orange", "Nursery" = "darkblue")) +
theme_bw()
tidy_KB_CCC_data %>%
filter(as.Date(Datetime_EST) < "2021-12-01" & as.Date(Datetime_EST) > "2021-06-01") %>%
ggplot(., aes(x=Datetime_EST, y=Temperature, color = site)) +
geom_line() +
facet_wrap(~month, scales = "free_x") +
scale_color_manual(values = c("CCC" = "orange", "Nursery" = "darkblue")) +
theme_bw()  +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
tidy_KB_CCC_data %>%
group_by(Date,site) %>%
summarise(mean_daily_temp = mean(Temperature), sd_daily_temp = sd(Temperature), daily_range = (max(Temperature)-min(Temperature))) %>%
ggplot(., aes(x=Date, y=daily_range, color = site)) +
geom_line() +
scale_color_manual(values = c("CCC" = "orange", "Nursery" = "darkblue")) +
theme_bw()
tidy_KB_CCC_data %>%
filter(as.Date(Datetime_EST) < "2021-12-01") %>%
dplyr::select(Temperature, Datetime_EST, site) %>%
group_by(as.Date(Datetime_EST), site) %>%
summarise(mean_daily_temp = mean(Temperature), sd_daily_temp = sd(Temperature), daily_range = (max(Temperature)-min(Temperature))) %>%
ggplot(., aes(x=`as.Date(Datetime_EST)`, y=daily_range, color = site)) +
geom_line() +
theme_bw() +
scale_color_manual(values = c("CCC" = "orange", "Nursery" = "darkblue")) +
scale_x_date(date_labels = "%b %Y",  # Customize the date format
date_breaks = "3 month") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x="Month Year", y = "Daily Variability (ºC/day)")
tidy_KB_CCC_data %>%
filter(as.Date(Datetime_EST) < "2021-12-01") %>%
dplyr::select(Temperature, Datetime_EST, site) %>%
group_by(as.Date(Datetime_EST), site) %>%
summarise(mean_daily_temp = mean(Temperature), sd_daily_temp = sd(Temperature), daily_range = (max(Temperature)-min(Temperature))) %>%
ggplot(., aes(x=`as.Date(Datetime_EST)`, y=daily_range, color = site)) +
geom_line() +
theme_bw() +
scale_color_manual(values = c("CCC" = "orange", "Nursery" = "darkblue")) +
scale_x_date(date_labels = "%b %Y",  # Customize the date format
date_breaks = "1 month") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x="Month Year", y = "Daily Variability (ºC/day)")
tidy_KB_CCC_data %>%
filter(as.Date(Datetime_EST) < "2021-12-01") %>%
dplyr::select(Temperature, Datetime_EST, site) %>%
group_by(as.Date(Datetime_EST), site) %>%
summarise(mean_daily_temp = mean(Temperature), sd_daily_temp = sd(Temperature), daily_range = (max(Temperature)-min(Temperature))) %>%
ggplot(., aes(x=`as.Date(Datetime_EST)`, y=daily_range, color = site)) +
geom_line() +
theme_bw() +
scale_color_manual(values = c("CCC" = "orange", "Nursery" = "darkblue")) +
scale_x_date(date_labels = "%b",  # Customize the date format
date_breaks = "1 month") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x="Month Year", y = "Daily Variability (ºC/day)")
tidy_KB_CCC_data %>%
filter(as.Date(Datetime_EST) < "2021-12-01") %>%
dplyr::select(Temperature, Datetime_EST, site) %>%
group_by(as.Date(Datetime_EST), site) %>%
summarise(mean_daily_temp = mean(Temperature), sd_daily_temp = sd(Temperature), daily_range = (max(Temperature)-min(Temperature))) %>%
ggplot(., aes(x=`as.Date(Datetime_EST)`, y=daily_range, color = site)) +
geom_line() +
theme_bw() +
scale_color_manual(values = c("CCC" = "orange", "Nursery" = "darkblue")) +
scale_x_date(date_labels = "%b",  # Customize the date format
date_breaks = "1 month") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x="Month", y = "Daily Variability (ºC/day)")
tidy_KB_CCC_data %>%
filter(as.Date(Datetime_EST) < "2021-12-01" & as.Date(Datetime_EST) > "2020-12-01") %>%
group_by(as.Date(Datetime_EST), site) %>%
summarise(daily_variability = (max(Temperature)-min(Temperature))) %>%
mutate(season = case_when(`as.Date(Datetime_EST)` <= "2021-05-25" ~ "Dry",
`as.Date(Datetime_EST)` >= "2021-05-26" & `as.Date(Datetime_EST)` <= "2021-10-15" ~ "Wet",
`as.Date(Datetime_EST)` >= "2021-10-16" ~ "Dry")) %>%
ggplot(., aes(x=site, y=daily_variability, fill = site)) +
geom_violin() +
theme_classic() +
scale_fill_manual(values = c("CCC" = "orange", "Nursery" = "darkblue")) +
facet_wrap(~season) +
stat_summary(fun.y=mean, geom="point", shape=18,
size=3, color="black")
